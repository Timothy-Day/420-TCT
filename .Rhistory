chems %>%
select(everything()) %>%
summarise_all(funs(sum(!is.na(.)))) %>%
gather(Chemical, Observations, cis.Nerolidol:CBC, na.rm = TRUE)
chems_obs$Type = c(rep('Terpene', 26), rep('THC', 5), rep('CBD', 8))
chems_obs %>% arrange(desc(Observations))
chems_obs.plot <-
plot_ly(
chems_obs.plot,
x = ~ Chemical,
y = ~ Observations,
name = "Number of Observations",
type = "bar",
transforms = list(
list(
type = 'groupby',
groups = chems_obs.plot$Type,
styles = list(
list(target = 'THC', value = list(marker = list(color = '#2ca02c'))),
list(target = 'Cannabidoid', value = list(marker = list(color = 'bcbd22'))),
list(target = 'Terpene', value = list(marker = list(color = '17becf')))
)
)
)
)
chems_obs.plot
chems_obs$Chemical <-
factor(chems_obs$Chemical, levels = unique(chems_obs$Chemical)[order(chems_obs$Observations, decreasing = TRUE)])
chems_obs.plot <-
plot_ly(
chems_obs.plot,
x = ~ Chemical,
y = ~ Observations,
name = "Number of Observations",
type = "bar",
transforms = list(
list(
type = 'groupby',
groups = chems_obs$Type,
styles = list(
list(target = 'THC', value = list(marker = list(color = '#2ca02c'))),
list(target = 'Cannabidoid', value = list(marker = list(color = 'bcbd22'))),
list(target = 'Terpene', value = list(marker = list(color = '17becf')))
)
)
)
)
chems_obs$Chemical <-
factor(chems_obs$Chemical, levels = unique(chems_obs$Chemical)[order(chems_obs$Observations, decreasing = TRUE)])
chems_obs.plot <-
plot_ly(
chems_obs,
x = ~ Chemical,
y = ~ Observations,
name = "Number of Observations",
type = "bar",
transforms = list(
list(
type = 'groupby',
groups = chems_obs$Type,
styles = list(
list(target = 'THC', value = list(marker = list(color = '#2ca02c'))),
list(target = 'Cannabidoid', value = list(marker = list(color = 'bcbd22'))),
list(target = 'Terpene', value = list(marker = list(color = '17becf')))
)
)
)
)
chems_obs.plot
chems_obs.plot_histogram <- plot_ly(alpha = 0.6) %>%
add_histogram(x = chems$delta.9.THC.A) %>%
add_histogram(x = chems$delta.9.THC) %>%
layout(barmode = "overlay")
chems_obs.plot_histogram
View(df.001)
t_select = 'delta.9.THC.A'
s_select = 'Jollybee Pure White Bubblegum'
df.001 %>% colnames(.)[max.col(.,ties.method="first")]
df.001 <-
df.000 %>%
group_by(., Sample.Name) %>%
summarise_if(., is.numeric, mean, na.rm = TRUE) %>%
.[rowSums(is.na(m)) != ncol(m), ]
df.001 <-
df.000 %>%
group_by(., Sample.Name) %>%
summarise_if(., is.numeric, mean, na.rm = TRUE) %>%
df.001[rowSums(is.na(.)) != ncol(.), ]
df.001 <-
df.000 %>%
group_by(., Sample.Name) %>%
summarise_if(., is.numeric, mean, na.rm = TRUE)
df.001 <-
df.000 %>%
group_by(., Sample.Name) %>%
summarise_if(., is.numeric, mean, na.rm = TRUE)
t_select = 'Carene'
#t_select = toString(t_select)
t_n = 10
t_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(t_select)) & !!rlang::sym(t_select) > 0)
library(dplyr)
library(plotly)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(tidyverse)
df.000 <- read.csv('/Users/dayti/NYCDSA/Projects/C-ChemComp/Terpene-Profile-Parser-for-Cannabis-Strains-master/results.csv')
df.001 <-
df.000 %>%
group_by(., Sample.Name) %>%
summarise_if(., is.numeric, mean, na.rm = TRUE) %>%
.[rowSums(is.na(.)) != (ncol(.)-3), ] %>%
select(.,-Provider,-Moisture.Content) %>%
subset(., Sample.Name != 'Nerolidol')
# Aggregate all like isomers.  Note to self:  Run this by Debbie.
df.001$Nerolidol <- rowSums(df.001[, c('cis.Nerolidol','trans.Nerolidol','trans.Nerolidol.1','trans.Nerolidol.2')], na.rm = TRUE) *
ifelse(rowSums(is.na(df.001[, c('cis.Nerolidol','trans.Nerolidol','trans.Nerolidol.1','trans.Nerolidol.2')])) == ncol(df.001[, c('cis.Nerolidol','trans.Nerolidol','trans.Nerolidol.1','trans.Nerolidol.2')]), NA, 1)
df.001$Caryophyllene <- rowSums(df.001[, c('Caryophyllene.Oxide','beta.Caryophyllene')], na.rm = TRUE) *
ifelse(rowSums(is.na(df.001[, c('Caryophyllene.Oxide','beta.Caryophyllene')])) == ncol(df.001[, c('Caryophyllene.Oxide','beta.Caryophyllene')]), NA, 1)
df.001$CBG <- rowSums(df.001[,c('delta.9.CBG.A','delta.9.CBG')], na.rm = TRUE) *
ifelse(rowSums(is.na(df.001[, c('delta.9.CBG.A','delta.9.CBG')])) == ncol(df.001[, c('delta.9.CBG.A','delta.9.CBG')]), NA, 1)
df.001$CBD <- rowSums(df.001[,c('CBD.A','CBD','CBDV','CBDV.A')], na.rm = TRUE) *
ifelse(rowSums(is.na(df.001[, c('CBD.A','CBD','CBDV','CBDV.A')])) == ncol(df.001[, c('CBD.A','CBD','CBDV','CBDV.A')]), NA, 1)
df.001$Terpinolene <- rowSums(df.001[,c('Terpinolene','alpha.Terpinene','gamma.Terpinene')], na.rm = TRUE) *
ifelse(rowSums(is.na(df.001[, c('Terpinolene','alpha.Terpinene','gamma.Terpinene')])) == ncol(df.001[, c('Terpinolene','alpha.Terpinene','gamma.Terpinene')]), NA, 1)
df.001$Ocimene <- rowSums(df.001[,c('trans.Ocimene','beta.Ocimene','Ocimene')], na.rm = TRUE) *
ifelse(rowSums(is.na(df.001[, c('trans.Ocimene','beta.Ocimene','Ocimene')])) == ncol(df.001[, c('trans.Ocimene','beta.Ocimene','Ocimene')]), NA, 1)
df.001$Pinene <- rowSums(df.001[,c('alpha.Pinene','beta.Pinene')], na.rm = TRUE) *
ifelse(rowSums(is.na(df.001[, c('alpha.Pinene','beta.Pinene')])) == ncol(df.001[, c('alpha.Pinene','beta.Pinene')]), NA, 1)
df.001$THC <- rowSums(df.001[,c('delta.9.THC.A','delta.9.THC','delta.8.THC','THC.A','THCV')], na.rm =
TRUE) *
ifelse(rowSums(is.na(df.001[, c('delta.9.THC.A','delta.9.THC','delta.8.THC','THC.A','THCV')])) == ncol(df.001[, c('delta.9.THC.A','delta.9.THC','delta.8.THC','THC.A','THCV')]), NA, 1)
df.001$Cymene = df.001$p.Cymene
df.001$Humulene=df.001$alpha.Humulene
df.001$Limonene=df.001$delta.Limonene
df.001$Myrcene=df.001$beta.Myrcene
df.001$Bisabolo=df.001$alpha.Bisabolol
df.001$Carene=df.001$X3.Carene
df.001 =
df.001 %>%
select(.,-cis.Nerolidol,-trans.Nerolidol,-trans.Nerolidol.1,-trans.Nerolidol.2,
-Caryophyllene.Oxide,-beta.Caryophyllene,
-delta.9.CBG.A,-delta.9.CBG,
-CBD.A,-CBDV,-CBDV.A,
-alpha.Terpinene,-gamma.Terpinene,
-trans.Ocimene,-beta.Ocimene,
-alpha.Pinene,-beta.Pinene,
-delta.9.THC.A,-delta.9.THC,-delta.8.THC,-THC.A,-THCV,
-p.Cymene,
-alpha.Humulene,
-delta.Limonene,
-beta.Myrcene,
-alpha.Bisabolol,
-X3.Carene)
df.001 <-
df.001 %>% subset(., select=c("Sample.Name",
"THC",
"CBC",
"CBD",
"CBG",
"CBN",
"Bisabolo",
"Camphene",
"Carene",
"Caryophyllene",
"Cymene",
"Eucalyptol",
"Geraniol",
"Guaiol",
"Humulene",
"Isopulegol",
"Limonene",
"Linalool",
"Myrcene",
"Nerolidol",
"Ocimene",
"Pinene",
"Terpinolene"))
cols = colnames(df.001[,2:23])
chems = df.001[, 2:23]
turpenes = df.001[7:23]
chems_obs <-
chems %>%
gather(.,Compound)%>%
group_by(., Compound) %>%
summarise_all(., funs(Observations = sum(!is.na(.)),
Mean = mean(!is.na(.)),
Median = median(.,na.rm=TRUE),
Std.Dev = sd(!is.na(.)))
) %>%
arrange(desc(Observations))
chems_obs
chems_obs$Compound <-
factor(chems_obs$Compound, levels = unique(chems_obs$Compound)[order(chems_obs$Observations, decreasing = TRUE)])
chems_obs.plot <-
plot_ly(
chems_obs,
x = ~ Compound,
y = ~ Observations,
name = "Number of Observations",
type = "bar",
marker = list(color = 'rgb(230, 204, 255))',
line = list(color = 'rgb(8,48,107)', width = 1.5)))
chems_obs.plot
chems_obs.histo <-
plot_ly(df.001,
type = 'histogram',
x = ~ CBD,
name = 'CBD',
color = '#ff99ff',
alpha = 0.6)
chems_obs.histo
t_select = 'Carene'
#t_select = toString(t_select)
t_n = 10
t_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(t_select)) & !!rlang::sym(t_select) > 0)
cutoff <- df.001 %>% .[[t_select]] %>% sort %>% rev %>% .[t_n]
compound_select <-
df.001 %>% filter(., !!rlang::sym(t_select) >= cutoff) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
t_select = 'Carene'
#t_select = toString(t_select)
t_n = 10
t_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(t_select)) & !!rlang::sym(t_select) > 0)
cutoff <-
df.001 %>%
.[!!rlang::sym(t_select)] %>% sort %>% rev %>% .[t_n]
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select))) %>%
.[t_n]
compound_select <-
df.001 %>% filter(., !!rlang::sym(t_select) >= cutoff) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
cutoff <-
df.001 %>%
arrange(., !!rlang::sym(t_select)) %>%
.[t_n]
compound_select <-
df.001 %>% filter(., !!rlang::sym(t_select) >= cutoff) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
t_select
t_select
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select))) %>%
.[t_n]
compound_select <-
df.001 %>% filter(., !!rlang::sym(t_select) >= cutoff) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
t_select = 'Carene'
t_n = 10
t_sample <-
df.001 %>%
filter(., !is.na(df.001[t_select]) & df.001[t_select] > 0)
cutoff <- df.001 %>% .[[t_select]] %>% sort %>% rev %>% .[t_n]
compound_select <-
df.001 %>%
filter_(lazyeval::interp(~ var >= cutoff, var = as.name(t_select))) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
t_select = 'Carene'
t_n = 10
t_sample <-
df.001 %>%
filter(., !is.na(df.001[t_select]) & df.001[t_select] > 0)
cutoff <- t_sample %>% .[[t_select]] %>% sort %>% rev %>% .[t_n]
compound_select <-
t_sample %>%
filter_(lazyeval::interp(~ var >= cutoff, var = as.name(t_select))) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
t.sample$t_select
t_sample$t_select
t_sample[[t_select]]
t_sample[t_select]
t_sample[[t_select]
t_sample[[t_select]]
t_sample[[t_select]]
t_sample[[!!rlang::sym(t_select)]]
t_sample[!!rlang::sym(t_select)]
cutoff <-
df.001 %>%
arrange(., !!rlang::sym(t_select))
cutoff
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select)))
cutoff
cutoff[t_n]
cutoff[t_n,]
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select)))
cutoff
cutoff = cutoff[t_n,]
cutoff
cutoff
cutoff = cutoff[t_n,t_select]
cutoff
cutoff = cutoff[t_n]
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select)))
cutoff = cutoff[t_n]
cutoff
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select)))
cutoff
cutoff[t_n,]
cutoff[t_n,][t_select]
cutoff = cutoff[t_n,][t_select]
cutoff
compound_select <-
df.001 %>% filter(., !!rlang::sym(t_select) >= cutoff) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
compound_select <-
t_sample %>% filter(., !!rlang::sym(t_select) >= cutoff) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select
cutoff = cutoff[t_n,][t_select]
cutoff
t_select = 'Carene'
#t_select = toString(t_select)
t_n = 10
t_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(t_select)) & !!rlang::sym(t_select) > 0)
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select)))
cutoff = cutoff[t_n,][t_select]
cutoff
cutoff = cutoff[t_n,]
cutoff
cutoff <-
df.001 %>%
arrange(., desc(!!rlang::sym(t_select)))
cutoff = cutoff[t_n,]
cutoff
t_select = 'Carene'
#t_select = toString(t_select)
t_n = 10
t_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(t_select)) & !!rlang::sym(t_select) > 0) %>%
arrange(., desc(!!rlang::sym(t_select)))
compound_select = t_sample[1:t_n,]
compound_select
t_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(t_select)) & !!rlang::sym(t_select) > 0) %>%
arrange(., desc(!!rlang::sym(t_select))) %>%
mutate_if(is.numeric, round, digits = 4)
compound_select = t_sample[1:t_n,]
compound_select
shiny::runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp()
shiny::runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
ts_select = 'Carene' #this needs to be selected first, then pick s_select
s_select = '"CBD" Hash'
t_n = 5
s_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(ts_select)) & !!rlang::sym(ts_select) > 0) %>%
arrange(., desc(!!rlang::sym(ts_select))) %>%
mutate_if(is.numeric, round, digits = 4)
strain_select = s_sample[1:t_n,]
strain_select
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
View(df.000)
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
strain_select
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
compound_select = t_sample[1:t_n,]
compound_select
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
shiny::runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp()
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
install.packages("shinyWidgets")
ionstall.packages('shinyWidgets')
install.packages('shinyWidgets')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
install.packages('shinytheme')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
install.packages("shinythemes")
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
h_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(h)) & !!rlang::sym(h) > 0) %>%
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
h = input$chems_obs.histo_input
h_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(h)) & !!rlang::sym(h) > 0)
plot_ly(h_sample,
type = 'histogram',
x =  ~ get(input$chems_obs.histo_input),
name = 'THC',
color = '#8B008B',
alpha = 1.0)
h = input$chems_obs.histo_input
h_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(h)) & !!rlang::sym(h) > 0)
plot_ly(h_sample,
type = 'histogram',
x =  ~ get(input$chems_obs.histo_input),
name = 'THC',
color = '#8B008B',
alpha = 1.0)
h_sample <-
df.001 %>%
filter(., !is.na(!!rlang::sym(h)) & !!rlang::sym(h) > 0)
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
shiny::runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
runApp('~/NYCDSA/Projects/C-ChemComp/420-TCT')
setwd("~/NYCDSA/Projects/C-ChemComp/420-TCT")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
